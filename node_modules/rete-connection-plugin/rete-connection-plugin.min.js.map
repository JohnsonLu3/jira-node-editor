{"version":3,"file":"rete-connection-plugin.min.js","sources":["src/pseudoconnection.ts","src/utils.ts","src/flow/base.ts","src/flow/utils.ts","src/flow/builtin/bidirect.ts","src/flow/builtin/classic/sync-connections.ts","src/flow/builtin/classic/index.ts","src/presets/classic.ts","src/index.ts"],"sourcesContent":["import { getUID } from 'rete'\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { ClassicScheme, Position, SocketData } from './types'\n\n/**\n * Create pseudoconnection. Used to trigger rendering of connection that is being created by user.\n * Has additional `isPseudo` property in payload.\n * @param extra Extra payload to add to connection\n */\nexport function createPseudoconnection<Schemes extends ClassicScheme, K>(extra?: Partial<Schemes['Connection']>) {\n  let element: HTMLElement | null = null\n  let id: string | null = null\n\n  function unmount(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>) {\n    if (id) {\n      areaPlugin.removeConnectionView(id)\n    }\n    element = null\n    id = null\n  }\n  function mount(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>) {\n    unmount(areaPlugin)\n    id = `pseudo_${getUID()}`\n  }\n\n  return {\n    isMounted() {\n      return Boolean(id)\n    },\n    mount,\n    // eslint-disable-next-line complexity\n    render(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>, { x, y }: Position, data: SocketData) {\n      const isOutput = data.side === 'output'\n      const pointer = { x: x + (isOutput ? -3 : 3), y } // fix hover of underlying elements\n\n      if (!id) throw new Error('pseudo connection id wasn\\'t generated')\n\n      const payload = isOutput ? {\n        id,\n        source: data.nodeId,\n        sourceOutput: data.key,\n        target: '',\n        targetInput: '',\n        ...(extra || {})\n      } : {\n        id,\n        target: data.nodeId,\n        targetInput: data.key,\n        source: '',\n        sourceOutput: '',\n        ...(extra || {})\n      }\n\n      if (!element) {\n        const view = areaPlugin.addConnectionView(payload)\n\n        element = view.element\n      }\n\n      if (!element) return\n\n      areaPlugin.emit({\n        type: 'render', data: {\n          element,\n          type: 'connection',\n          payload,\n          ...(isOutput ? { end: pointer } : { start: pointer })\n        }\n      })\n    },\n    unmount\n  }\n}\n","import { SocketData } from './types'\n/**\n * @param elements list of Element returned by document.elementsFromPoint\n */\nexport function findSocket(socketsCache: WeakMap<Element, SocketData>, elements: Element[]) {\n  for (const element of elements) {\n    const found = socketsCache.get(element)\n\n    if (found) {\n      return found\n    }\n  }\n}\n\n/**\n * Alternative to document.elementsFromPoint that traverses shadow roots\n * @param x x coordinate\n * @param y y coordinate\n * @param root root element to search in\n */\nexport function elementsFromPoint(x: number, y: number, root: ShadowRoot | Document = document) {\n  const elements = root.elementsFromPoint(x, y)\n  const shadowRoot = elements[0]?.shadowRoot\n\n  if (shadowRoot && shadowRoot !== root) {\n    elements.unshift(...elementsFromPoint(x, y, shadowRoot))\n  }\n\n  return elements\n}\n","import { BaseSchemes, NodeEditor, Scope } from 'rete'\n\nimport { Connection, SocketData } from '../types'\n\nexport type Context<Schemes extends BaseSchemes, K extends any[]> = {\n    editor: NodeEditor<Schemes>\n    scope: Scope<Connection, K>\n    socketsCache: Map<Element, SocketData>\n}\nexport type EventType = 'up' | 'down'\nexport type PickParams = { socket: SocketData, event: EventType }\n\nexport abstract class Flow<Schemes extends BaseSchemes, K extends any[]> {\n    public abstract pick(params: PickParams, context: Context<Schemes, K>): Promise<void>\n    public abstract getPickedSocket(): SocketData | undefined\n    public abstract drop(context: Context<Schemes, K>): void\n}\n","import { getUID } from 'rete'\n\nimport { ClassicScheme, SocketData } from '../types'\nimport { Context, PickParams } from './base'\n\nexport interface StateContext<Schemes extends ClassicScheme, K extends any[]> {\n  currentState: State<Schemes, K>\n  switchTo(state: State<Schemes, K>): void\n}\n\nexport abstract class State<Schemes extends ClassicScheme, K extends any[]> {\n  context!: StateContext<Schemes, K>\n  initial: SocketData | undefined\n\n  setContext(context: StateContext<Schemes, K>) {\n    this.context = context\n  }\n\n  abstract pick(params: PickParams, context: Context<Schemes, K>): Promise<void>\n  abstract drop(context: Context<Schemes, K>): void\n}\n\nexport function getSourceTarget(initial: SocketData, socket: SocketData) {\n  const forward = initial.side === 'output' && socket.side === 'input'\n  const backward = initial.side === 'input' && socket.side === 'output'\n  const [source, target] = forward\n    ? [initial, socket]\n    : (backward ? [socket, initial] : [])\n\n  if (source && target) return [source, target]\n}\n\nexport function canMakeConnection(initial: SocketData, socket: SocketData) {\n  return Boolean(getSourceTarget(initial, socket))\n}\n\nexport function makeConnection<Schemes extends ClassicScheme, K extends any[]>(initial: SocketData, socket: SocketData, context: Context<Schemes, K>) {\n  const [source, target] = getSourceTarget(initial, socket) || [null, null]\n\n  if (source && target) {\n    context.editor.addConnection({\n      id: getUID(),\n      source: source.nodeId,\n      sourceOutput: source.key,\n      target: target.nodeId,\n      targetInput: target.key\n    })\n    return true\n  }\n}\n","import { ClassicScheme, SocketData } from '../../types'\nimport { Context, Flow, PickParams } from '../base'\nimport { makeConnection as defaultMakeConnection, State, StateContext } from '../utils'\n\n/**\n * Bidirect flow params\n */\nexport type BidirectParams<Schemes extends ClassicScheme> = {\n  /** If true, user can pick a pseudo-connection by clicking on socket, not only by pointerdown */\n  pickByClick: boolean\n  /** Custom function to make connection */\n  makeConnection: <K extends any[]>(from: SocketData, to: SocketData, context: Context<Schemes, K>) => boolean | undefined\n}\n\nclass Picked<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(public initial: SocketData, private params: BidirectParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (this.params.makeConnection(this.initial, socket, context)) {\n      this.drop(context, socket, true)\n    } else if (!this.params.pickByClick) {\n      this.drop(context, socket)\n    }\n  }\n\n  drop(context: Context<ClassicScheme, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    this.context.switchTo(new Idle<Schemes, K>(this.params))\n  }\n}\n\nclass Idle<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(private params: BidirectParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (event === 'down') {\n      if (await context.scope.emit({ type: 'connectionpick', data: { socket } })) {\n        this.context.switchTo(new Picked(socket, this.params))\n      } else {\n        this.drop(context)\n      }\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    delete this.initial\n  }\n}\n\n/**\n * Bidirect flow. User can pick a socket and connect it by releasing mouse button.\n * More simple than classic flow, but less functional (can't remove connection by clicking on input socket).\n */\nexport class BidirectFlow<Schemes extends ClassicScheme, K extends any[]> implements StateContext<Schemes, K>, Flow<Schemes, K> {\n  currentState!: State<Schemes, K>\n\n  constructor(params?: Partial<BidirectParams<Schemes>>) {\n    const pickByClick = Boolean(params?.pickByClick)\n    const makeConnection = params?.makeConnection || defaultMakeConnection\n\n    this.switchTo(new Idle({ pickByClick, makeConnection }))\n  }\n\n  public async pick(params: PickParams, context: Context<Schemes, K>) {\n    await this.currentState.pick(params, context)\n  }\n\n  public getPickedSocket() {\n    return this.currentState.initial\n  }\n\n  public drop(context: Context<Schemes, K>) {\n    this.currentState.drop(context)\n  }\n\n  public switchTo(state: State<Schemes, K>): void {\n    state.setContext(this)\n    this.currentState = state\n  }\n}\n","import { NodeEditor } from 'rete'\n\nimport { ClassicScheme, SocketData } from '../../../types'\n\nfunction findPort<Schemes extends ClassicScheme>(socket: SocketData, editor: NodeEditor<Schemes>) {\n  const node = editor.getNode(socket.nodeId)\n\n  if (!node) throw new Error('cannot find node')\n\n  const list = socket.side === 'input' ? node.inputs : node.outputs\n\n  return list[socket.key]\n}\nfunction findConnections<Schemes extends ClassicScheme>(socket: SocketData, editor: NodeEditor<Schemes>) {\n  const { nodeId, side, key } = socket\n\n  return editor.getConnections().filter(connection => {\n    if (side === 'input') {\n      return connection.target === nodeId && connection.targetInput === key\n    }\n    if (side === 'output') {\n      return connection.source === nodeId && connection.sourceOutput === key\n    }\n  })\n}\n\n/**\n * Remove existing connections if Port doesnt allow multiple connections\n */\nexport function syncConnections<Schemes extends ClassicScheme>(sockets: SocketData[], editor: NodeEditor<Schemes>) {\n  const connections: Schemes['Connection'][] = sockets.map(socket => {\n    const port = findPort(socket, editor)\n    const multiple = port?.multipleConnections\n\n    if (multiple) return []\n\n    return findConnections(socket, editor)\n  }).flat()\n\n  return {\n    commit() {\n      const uniqueIds = Array.from(new Set(connections.map(({ id }) => id)))\n\n      uniqueIds.forEach(id => editor.removeConnection(id))\n    }\n  }\n}\n","\nimport { ClassicScheme, SocketData } from '../../../types'\nimport { Context, Flow, PickParams } from '../../base'\nimport {\n  canMakeConnection as defaultCanMakeConnection, makeConnection as defaultMakeConnection, State, StateContext\n} from '../../utils'\nimport { syncConnections } from './sync-connections'\n\n/**\n * Classic flow params\n */\nexport type ClassicParams<Schemes extends ClassicScheme> = {\n  /** Custom function to check if connection can be made */\n  canMakeConnection: (from: SocketData, to: SocketData) => boolean | undefined\n  /** Custom function to make connection */\n  makeConnection: <K extends any[]>(from: SocketData, to: SocketData, context: Context<Schemes, K>) => boolean | undefined\n}\n\nclass Picked<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(public initial: SocketData, private params: ClassicParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (this.params.canMakeConnection(this.initial, socket)) {\n      syncConnections([this.initial, socket], context.editor).commit()\n      const created = this.params.makeConnection(this.initial, socket, context)\n\n      this.drop(context, created ? socket : null, created)\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    this.context.switchTo(new Idle(this.params))\n  }\n}\n\nclass PickedExisting<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  initial!: SocketData\n  outputSocket: SocketData\n\n  constructor(public connection: Schemes['Connection'], private params: ClassicParams<Schemes>, context: Context<Schemes, K>) {\n    super()\n    const outputSocket = Array.from(context.socketsCache.values()).find(data => {\n      return data.nodeId === this.connection.source\n        && data.side === 'output'\n        && data.key === this.connection.sourceOutput\n    })\n\n    if (!outputSocket) throw new Error('cannot find output socket')\n\n    this.outputSocket = outputSocket\n  }\n\n  async init(context: Context<Schemes, K>) {\n    context.scope.emit({ type: 'connectionpick', data: { socket: this.outputSocket } }).then(response => {\n      if (response) {\n        context.editor.removeConnection(this.connection.id)\n        this.initial = this.outputSocket\n      } else {\n        this.drop(context)\n      }\n    })\n  }\n\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (this.initial && !(socket.side === 'input' && this.connection.target === socket.nodeId && this.connection.targetInput === socket.key)) {\n      if (this.params.canMakeConnection(this.initial, socket)) {\n        syncConnections([this.initial, socket], context.editor).commit()\n        const created = this.params.makeConnection(this.initial, socket, context)\n\n        this.drop(context, created ? socket : null, created)\n      }\n    } else if (event === 'down') {\n      if (this.initial) {\n        syncConnections([this.initial, socket], context.editor).commit()\n        const created = this.params.makeConnection(this.initial, socket, context)\n\n        this.drop(context, created ? socket : null, created)\n      }\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    this.context.switchTo(new Idle<Schemes, K>(this.params))\n  }\n}\n\nclass Idle<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(private params: ClassicParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (event !== 'down') return\n    if (socket.side === 'input') {\n      const connection = context\n        .editor.getConnections()\n        .find(item => item.target === socket.nodeId && item.targetInput === socket.key)\n\n      if (connection) {\n        const state = new PickedExisting(connection, this.params, context)\n\n        await state.init(context)\n        this.context.switchTo(state)\n        return\n      }\n    }\n\n    if (await context.scope.emit({ type: 'connectionpick', data: { socket } })) {\n      this.context.switchTo(new Picked(socket, this.params))\n    } else {\n      this.drop(context)\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    delete this.initial\n  }\n}\n\n/**\n * Classic flow. User can pick/click a socket and connect it by releasing/clicking on another socket.\n * If connection already exists and user clicks on input socket, connection will be removed.\n */\nexport class ClassicFlow<Schemes extends ClassicScheme, K extends any[]> implements StateContext<Schemes, K>, Flow<Schemes, K> {\n  currentState!: State<Schemes, K>\n\n  constructor(params?: Partial<ClassicParams<Schemes>>) {\n    const canMakeConnection = params?.canMakeConnection || defaultCanMakeConnection\n    const makeConnection = params?.makeConnection || defaultMakeConnection\n\n    this.switchTo(new Idle<Schemes, K>({ canMakeConnection, makeConnection }))\n  }\n\n  public async pick(params: PickParams, context: Context<Schemes, K>) {\n    await this.currentState.pick(params, context)\n  }\n\n  public getPickedSocket() {\n    return this.currentState.initial\n  }\n\n  public switchTo(state: State<Schemes, K>): void {\n    state.setContext(this)\n    this.currentState = state\n  }\n\n  public drop(context: Context<Schemes, K>) {\n    this.currentState.drop(context)\n  }\n}\n","import { ClassicFlow } from '../flow'\n\n/**\n * Classic preset. Uses `ClassicFlow` for managing connections by user\n */\nexport function setup() {\n  return () => new ClassicFlow()\n}\n","import { NodeEditor, Scope } from 'rete'\nimport { BaseArea, BaseAreaPlugin, RenderSignal } from 'rete-area-plugin'\n\nimport { Flow } from './flow'\nimport { EventType } from './flow/base'\nimport { createPseudoconnection } from './pseudoconnection'\nimport { ClassicScheme, Connection, Position, Preset, Side, SocketData } from './types'\nimport { elementsFromPoint, findSocket } from './utils'\n\nexport * from './flow'\nexport * as Presets from './presets'\nexport { createPseudoconnection } from './pseudoconnection'\nexport type { Connection, ConnectionExtra, Preset, Side, SocketData } from './types'\n\ntype Requires =\n  | { type: 'pointermove', data: { position: Position, event: PointerEvent } }\n  | { type: 'pointerup', data: { position: Position, event: PointerEvent } }\n  | RenderSignal<'socket', {\n    nodeId: string,\n    side: Side,\n    key: string\n  }>\n  | { type: 'unmount', data: { element: HTMLElement } }\n\n/**\n * Connection plugin. Responsible for user interaction with connections (creation, deletion)\n * @priority 9\n * @emits connectionpick\n * @emits connectiondrop\n * @listens pointermove\n * @listens pointerup\n * @listens render\n * @listens unmount\n */\nexport class ConnectionPlugin<Schemes extends ClassicScheme, K = Requires> extends Scope<Connection, [Requires | K]> {\n  presets: Preset<Schemes>[] = []\n  private areaPlugin!: BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n  private editor!: NodeEditor<Schemes>\n  private currentFlow: Flow<Schemes, any[]> | null = null\n  private preudoconnection = createPseudoconnection({ isPseudo: true })\n  private socketsCache = new Map<Element, SocketData>()\n\n  constructor() {\n    super('connection')\n  }\n\n  /**\n   * Add preset to the plugin\n   * @param preset Preset to add\n   */\n  public addPreset(preset: Preset<Schemes>) {\n    this.presets.push(preset)\n  }\n\n  private findPreset(data: SocketData) {\n    for (const preset of this.presets) {\n      const flow = preset(data)\n\n      if (flow) return flow\n    }\n    return null\n  }\n\n  update() {\n    if (!this.currentFlow) return\n    const socket = this.currentFlow.getPickedSocket()\n\n    if (socket) {\n      this.preudoconnection.render(this.areaPlugin, this.areaPlugin.area.pointer, socket)\n    }\n  }\n\n  /**\n   * Drop pseudo-connection if exists\n   * @emits connectiondrop\n   */\n  drop() {\n    const flowContext = { editor: this.editor, scope: this, socketsCache: this.socketsCache }\n\n    if (this.currentFlow) {\n      this.currentFlow.drop(flowContext)\n      this.preudoconnection.unmount(this.areaPlugin)\n      this.currentFlow = null\n    }\n  }\n\n  // eslint-disable-next-line max-statements\n  async pick(event: PointerEvent, type: EventType) {\n    const flowContext = { editor: this.editor, scope: this, socketsCache: this.socketsCache }\n    const pointedElements = elementsFromPoint(event.clientX, event.clientY)\n    const pickedSocket = findSocket(this.socketsCache, pointedElements)\n\n    if (pickedSocket) {\n      event.preventDefault()\n      event.stopPropagation()\n      this.currentFlow = this.currentFlow || this.findPreset(pickedSocket)\n\n      if (this.currentFlow) {\n        await this.currentFlow.pick({ socket: pickedSocket, event: type }, flowContext)\n        this.preudoconnection.mount(this.areaPlugin)\n      }\n    } else if (this.currentFlow) {\n      this.currentFlow.drop(flowContext)\n    }\n    if (this.currentFlow && !this.currentFlow.getPickedSocket()) {\n      this.preudoconnection.unmount(this.areaPlugin)\n      this.currentFlow = null\n    }\n    this.update()\n  }\n\n  setParent(scope: Scope<Requires | K>): void {\n    super.setParent(scope)\n    this.areaPlugin = this.parentScope<BaseAreaPlugin<Schemes, BaseArea<Schemes>>>(BaseAreaPlugin)\n    this.editor = this.areaPlugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n\n    const pointerdownSocket = (e: PointerEvent) => {\n      this.pick(e, 'down')\n    }\n\n    // eslint-disable-next-line max-statements\n    this.addPipe(context => {\n      if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n      if (context.type === 'pointermove') {\n        this.update()\n      } else if (context.type === 'pointerup') {\n        this.pick(context.data.event, 'up')\n      } else if (context.type === 'render') {\n        if (context.data.type === 'socket') {\n          const { element } = context.data\n\n          element.addEventListener('pointerdown', pointerdownSocket)\n          this.socketsCache.set(element, context.data)\n        }\n      } else if (context.type === 'unmount') {\n        const { element } = context.data\n\n        element.removeEventListener('pointerdown', pointerdownSocket)\n        this.socketsCache.delete(element)\n      }\n      return context\n    })\n  }\n}\n"],"names":["createPseudoconnection","extra","element","id","unmount","areaPlugin","removeConnectionView","isMounted","Boolean","mount","concat","getUID","render","_ref","data","x","y","isOutput","side","pointer","Error","payload","_objectSpread","source","nodeId","sourceOutput","key","target","targetInput","view","addConnectionView","emit","type","end","start","findSocket","socketsCache","elements","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","found","get","err","e","f","elementsFromPoint","_elements$","root","arguments","length","undefined","document","shadowRoot","unshift","apply","_toConsumableArray","Flow","_createClass","_classCallCheck","State","context","this","getSourceTarget","initial","socket","forward","backward","_ref2","_slicedToArray","canMakeConnection","makeConnection","_ref4","editor","addConnection","Picked","_State","_inherits","_pick","_super","_createSuper","params","_this","call","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","drop","pickByClick","stop","_x","_x2","created","scope","switchTo","Idle","_State2","_pick2","_super2","_this2","_callee2","_context2","event","sent","_x3","_x4","BidirectFlow","defaultMakeConnection","_pick3","_callee3","_context3","currentState","pick","_x5","_x6","state","setContext","syncConnections","sockets","connections","map","port","node","getNode","inputs","outputs","findPort","multipleConnections","getConnections","filter","connection","findConnections","flat","commit","Array","from","Set","forEach","removeConnection","PickedExisting","_init","outputSocket","values","find","_this3","then","response","_created","_State3","_super3","_this4","_callee4","_ref3","_connection","_context4","abrupt","item","init","_x7","ClassicFlow","defaultCanMakeConnection","_pick4","_callee5","_context5","_x8","_x9","ConnectionPlugin","_Scope","_defineProperty","_assertThisInitialized","isPseudo","Map","preset","presets","push","flow","currentFlow","getPickedSocket","preudoconnection","area","flowContext","pointedElements","pickedSocket","clientX","clientY","preventDefault","stopPropagation","findPreset","update","_get","_getPrototypeOf","prototype","parentScope","BaseAreaPlugin","NodeEditor","pointerdownSocket","addPipe","_typeof","addEventListener","set","removeEventListener","Scope"],"mappings":"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"}