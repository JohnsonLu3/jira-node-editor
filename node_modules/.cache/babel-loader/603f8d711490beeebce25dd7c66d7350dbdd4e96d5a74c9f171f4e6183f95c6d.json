{"ast":null,"code":"/*!\n* rete-connection-plugin v2.0.3\n* (c) 2024 Vitaliy Stoliarov\n* Released under the MIT license.\n* */\nfunction ___$insertStyle(css) {\n  if (!css) {\n    return;\n  }\n  if (typeof window === 'undefined') {\n    return;\n  }\n  var style = document.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = css;\n  document.head.appendChild(style);\n  return css;\n}\nimport _typeof from '@babel/runtime/helpers/typeof';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _get from '@babel/runtime/helpers/get';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { getUID, NodeEditor, Scope } from 'rete';\nimport { BaseAreaPlugin } from 'rete-area-plugin';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n/**\n * Create pseudoconnection. Used to trigger rendering of connection that is being created by user.\n * Has additional `isPseudo` property in payload.\n * @param extra Extra payload to add to connection\n */\nfunction createPseudoconnection(extra) {\n  var element = null;\n  var id = null;\n  function unmount(areaPlugin) {\n    if (id) {\n      areaPlugin.removeConnectionView(id);\n    }\n    element = null;\n    id = null;\n  }\n  function mount(areaPlugin) {\n    unmount(areaPlugin);\n    id = \"pseudo_\".concat(getUID());\n  }\n  return {\n    isMounted: function isMounted() {\n      return Boolean(id);\n    },\n    mount: mount,\n    // eslint-disable-next-line complexity\n    render: function render(areaPlugin, _ref, data) {\n      var x = _ref.x,\n        y = _ref.y;\n      var isOutput = data.side === 'output';\n      var pointer = {\n        x: x + (isOutput ? -3 : 3),\n        y: y\n      }; // fix hover of underlying elements\n\n      if (!id) throw new Error('pseudo connection id wasn\\'t generated');\n      var payload = isOutput ? _objectSpread({\n        id: id,\n        source: data.nodeId,\n        sourceOutput: data.key,\n        target: '',\n        targetInput: ''\n      }, extra || {}) : _objectSpread({\n        id: id,\n        target: data.nodeId,\n        targetInput: data.key,\n        source: '',\n        sourceOutput: ''\n      }, extra || {});\n      if (!element) {\n        var view = areaPlugin.addConnectionView(payload);\n        element = view.element;\n      }\n      if (!element) return;\n      areaPlugin.emit({\n        type: 'render',\n        data: _objectSpread({\n          element: element,\n          type: 'connection',\n          payload: payload\n        }, isOutput ? {\n          end: pointer\n        } : {\n          start: pointer\n        })\n      });\n    },\n    unmount: unmount\n  };\n}\nfunction _createForOfIteratorHelper$1(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray$1(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$1(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen);\n}\nfunction _arrayLikeToArray$1(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/**\n * @param elements list of Element returned by document.elementsFromPoint\n */\nfunction findSocket(socketsCache, elements) {\n  var _iterator = _createForOfIteratorHelper$1(elements),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var element = _step.value;\n      var found = socketsCache.get(element);\n      if (found) {\n        return found;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\n/**\n * Alternative to document.elementsFromPoint that traverses shadow roots\n * @param x x coordinate\n * @param y y coordinate\n * @param root root element to search in\n */\nfunction elementsFromPoint(x, y) {\n  var _elements$;\n  var root = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n  var elements = root.elementsFromPoint(x, y);\n  var shadowRoot = (_elements$ = elements[0]) === null || _elements$ === void 0 ? void 0 : _elements$.shadowRoot;\n  if (shadowRoot && shadowRoot !== root) {\n    elements.unshift.apply(elements, _toConsumableArray(elementsFromPoint(x, y, shadowRoot)));\n  }\n  return elements;\n}\nvar Flow = /*#__PURE__*/_createClass(function Flow() {\n  _classCallCheck(this, Flow);\n});\nvar State = /*#__PURE__*/function () {\n  function State() {\n    _classCallCheck(this, State);\n  }\n  _createClass(State, [{\n    key: \"setContext\",\n    value: function setContext(context) {\n      this.context = context;\n    }\n  }]);\n  return State;\n}();\nfunction getSourceTarget(initial, socket) {\n  var forward = initial.side === 'output' && socket.side === 'input';\n  var backward = initial.side === 'input' && socket.side === 'output';\n  var _ref = forward ? [initial, socket] : backward ? [socket, initial] : [],\n    _ref2 = _slicedToArray(_ref, 2),\n    source = _ref2[0],\n    target = _ref2[1];\n  if (source && target) return [source, target];\n}\nfunction canMakeConnection(initial, socket) {\n  return Boolean(getSourceTarget(initial, socket));\n}\nfunction makeConnection(initial, socket, context) {\n  var _ref3 = getSourceTarget(initial, socket) || [null, null],\n    _ref4 = _slicedToArray(_ref3, 2),\n    source = _ref4[0],\n    target = _ref4[1];\n  if (source && target) {\n    context.editor.addConnection({\n      id: getUID(),\n      source: source.nodeId,\n      sourceOutput: source.key,\n      target: target.nodeId,\n      targetInput: target.key\n    });\n    return true;\n  }\n}\nfunction _createSuper$2(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$2();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$2() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Bidirect flow params\n */\nvar Picked$1 = /*#__PURE__*/function (_State) {\n  _inherits(Picked, _State);\n  var _super = _createSuper$2(Picked);\n  function Picked(initial, params) {\n    var _this;\n    _classCallCheck(this, Picked);\n    _this = _super.call(this);\n    _this.initial = initial;\n    _this.params = params;\n    return _this;\n  }\n  _createClass(Picked, [{\n    key: \"pick\",\n    value: function () {\n      var _pick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, context) {\n        var socket;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              socket = _ref.socket;\n              if (this.params.makeConnection(this.initial, socket, context)) {\n                this.drop(context, socket, true);\n              } else if (!this.params.pickByClick) {\n                this.drop(context, socket);\n              }\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function pick(_x, _x2) {\n        return _pick.apply(this, arguments);\n      }\n      return pick;\n    }()\n  }, {\n    key: \"drop\",\n    value: function drop(context) {\n      var socket = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var created = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (this.initial) {\n        context.scope.emit({\n          type: 'connectiondrop',\n          data: {\n            initial: this.initial,\n            socket: socket,\n            created: created\n          }\n        });\n      }\n      this.context.switchTo(new Idle$1(this.params));\n    }\n  }]);\n  return Picked;\n}(State);\nvar Idle$1 = /*#__PURE__*/function (_State2) {\n  _inherits(Idle, _State2);\n  var _super2 = _createSuper$2(Idle);\n  function Idle(params) {\n    var _this2;\n    _classCallCheck(this, Idle);\n    _this2 = _super2.call(this);\n    _this2.params = params;\n    return _this2;\n  }\n  _createClass(Idle, [{\n    key: \"pick\",\n    value: function () {\n      var _pick2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2, context) {\n        var socket, event;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              socket = _ref2.socket, event = _ref2.event;\n              if (!(event === 'down')) {\n                _context2.next = 9;\n                break;\n              }\n              _context2.next = 4;\n              return context.scope.emit({\n                type: 'connectionpick',\n                data: {\n                  socket: socket\n                }\n              });\n            case 4:\n              if (!_context2.sent) {\n                _context2.next = 8;\n                break;\n              }\n              this.context.switchTo(new Picked$1(socket, this.params));\n              _context2.next = 9;\n              break;\n            case 8:\n              this.drop(context);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function pick(_x3, _x4) {\n        return _pick2.apply(this, arguments);\n      }\n      return pick;\n    }()\n  }, {\n    key: \"drop\",\n    value: function drop(context) {\n      var socket = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var created = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (this.initial) {\n        context.scope.emit({\n          type: 'connectiondrop',\n          data: {\n            initial: this.initial,\n            socket: socket,\n            created: created\n          }\n        });\n      }\n      delete this.initial;\n    }\n  }]);\n  return Idle;\n}(State);\n/**\n * Bidirect flow. User can pick a socket and connect it by releasing mouse button.\n * More simple than classic flow, but less functional (can't remove connection by clicking on input socket).\n */\nvar BidirectFlow = /*#__PURE__*/function () {\n  function BidirectFlow(params) {\n    _classCallCheck(this, BidirectFlow);\n    var pickByClick = Boolean(params === null || params === void 0 ? void 0 : params.pickByClick);\n    var makeConnection$1 = (params === null || params === void 0 ? void 0 : params.makeConnection) || makeConnection;\n    this.switchTo(new Idle$1({\n      pickByClick: pickByClick,\n      makeConnection: makeConnection$1\n    }));\n  }\n  _createClass(BidirectFlow, [{\n    key: \"pick\",\n    value: function () {\n      var _pick3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params, context) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.currentState.pick(params, context);\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function pick(_x5, _x6) {\n        return _pick3.apply(this, arguments);\n      }\n      return pick;\n    }()\n  }, {\n    key: \"getPickedSocket\",\n    value: function getPickedSocket() {\n      return this.currentState.initial;\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(context) {\n      this.currentState.drop(context);\n    }\n  }, {\n    key: \"switchTo\",\n    value: function switchTo(state) {\n      state.setContext(this);\n      this.currentState = state;\n    }\n  }]);\n  return BidirectFlow;\n}();\nfunction findPort(socket, editor) {\n  var node = editor.getNode(socket.nodeId);\n  if (!node) throw new Error('cannot find node');\n  var list = socket.side === 'input' ? node.inputs : node.outputs;\n  return list[socket.key];\n}\nfunction findConnections(socket, editor) {\n  var nodeId = socket.nodeId,\n    side = socket.side,\n    key = socket.key;\n  return editor.getConnections().filter(function (connection) {\n    if (side === 'input') {\n      return connection.target === nodeId && connection.targetInput === key;\n    }\n    if (side === 'output') {\n      return connection.source === nodeId && connection.sourceOutput === key;\n    }\n  });\n}\n\n/**\n * Remove existing connections if Port doesnt allow multiple connections\n */\nfunction syncConnections(sockets, editor) {\n  var connections = sockets.map(function (socket) {\n    var port = findPort(socket, editor);\n    var multiple = port === null || port === void 0 ? void 0 : port.multipleConnections;\n    if (multiple) return [];\n    return findConnections(socket, editor);\n  }).flat();\n  return {\n    commit: function commit() {\n      var uniqueIds = Array.from(new Set(connections.map(function (_ref) {\n        var id = _ref.id;\n        return id;\n      })));\n      uniqueIds.forEach(function (id) {\n        return editor.removeConnection(id);\n      });\n    }\n  };\n}\nfunction _createSuper$1(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$1() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Classic flow params\n */\nvar Picked = /*#__PURE__*/function (_State) {\n  _inherits(Picked, _State);\n  var _super = _createSuper$1(Picked);\n  function Picked(initial, params) {\n    var _this;\n    _classCallCheck(this, Picked);\n    _this = _super.call(this);\n    _this.initial = initial;\n    _this.params = params;\n    return _this;\n  }\n  _createClass(Picked, [{\n    key: \"pick\",\n    value: function () {\n      var _pick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, context) {\n        var socket, created;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              socket = _ref.socket;\n              if (this.params.canMakeConnection(this.initial, socket)) {\n                syncConnections([this.initial, socket], context.editor).commit();\n                created = this.params.makeConnection(this.initial, socket, context);\n                this.drop(context, created ? socket : null, created);\n              }\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function pick(_x, _x2) {\n        return _pick.apply(this, arguments);\n      }\n      return pick;\n    }()\n  }, {\n    key: \"drop\",\n    value: function drop(context) {\n      var socket = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var created = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (this.initial) {\n        context.scope.emit({\n          type: 'connectiondrop',\n          data: {\n            initial: this.initial,\n            socket: socket,\n            created: created\n          }\n        });\n      }\n      this.context.switchTo(new Idle(this.params));\n    }\n  }]);\n  return Picked;\n}(State);\nvar PickedExisting = /*#__PURE__*/function (_State2) {\n  _inherits(PickedExisting, _State2);\n  var _super2 = _createSuper$1(PickedExisting);\n  function PickedExisting(connection, params, context) {\n    var _this2;\n    _classCallCheck(this, PickedExisting);\n    _this2 = _super2.call(this);\n    _this2.connection = connection;\n    _this2.params = params;\n    var outputSocket = Array.from(context.socketsCache.values()).find(function (data) {\n      return data.nodeId === _this2.connection.source && data.side === 'output' && data.key === _this2.connection.sourceOutput;\n    });\n    if (!outputSocket) throw new Error('cannot find output socket');\n    _this2.outputSocket = outputSocket;\n    return _this2;\n  }\n  _createClass(PickedExisting, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(context) {\n        var _this3 = this;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              context.scope.emit({\n                type: 'connectionpick',\n                data: {\n                  socket: this.outputSocket\n                }\n              }).then(function (response) {\n                if (response) {\n                  context.editor.removeConnection(_this3.connection.id);\n                  _this3.initial = _this3.outputSocket;\n                } else {\n                  _this3.drop(context);\n                }\n              });\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function init(_x3) {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"pick\",\n    value: function () {\n      var _pick2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref2, context) {\n        var socket, event, created, _created;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              socket = _ref2.socket, event = _ref2.event;\n              if (this.initial && !(socket.side === 'input' && this.connection.target === socket.nodeId && this.connection.targetInput === socket.key)) {\n                if (this.params.canMakeConnection(this.initial, socket)) {\n                  syncConnections([this.initial, socket], context.editor).commit();\n                  created = this.params.makeConnection(this.initial, socket, context);\n                  this.drop(context, created ? socket : null, created);\n                }\n              } else if (event === 'down') {\n                if (this.initial) {\n                  syncConnections([this.initial, socket], context.editor).commit();\n                  _created = this.params.makeConnection(this.initial, socket, context);\n                  this.drop(context, _created ? socket : null, _created);\n                }\n              }\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function pick(_x4, _x5) {\n        return _pick2.apply(this, arguments);\n      }\n      return pick;\n    }()\n  }, {\n    key: \"drop\",\n    value: function drop(context) {\n      var socket = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var created = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (this.initial) {\n        context.scope.emit({\n          type: 'connectiondrop',\n          data: {\n            initial: this.initial,\n            socket: socket,\n            created: created\n          }\n        });\n      }\n      this.context.switchTo(new Idle(this.params));\n    }\n  }]);\n  return PickedExisting;\n}(State);\nvar Idle = /*#__PURE__*/function (_State3) {\n  _inherits(Idle, _State3);\n  var _super3 = _createSuper$1(Idle);\n  function Idle(params) {\n    var _this4;\n    _classCallCheck(this, Idle);\n    _this4 = _super3.call(this);\n    _this4.params = params;\n    return _this4;\n  }\n  _createClass(Idle, [{\n    key: \"pick\",\n    value: function () {\n      var _pick3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref3, context) {\n        var socket, event, _connection, state;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              socket = _ref3.socket, event = _ref3.event;\n              if (!(event !== 'down')) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 3:\n              if (!(socket.side === 'input')) {\n                _context4.next = 11;\n                break;\n              }\n              _connection = context.editor.getConnections().find(function (item) {\n                return item.target === socket.nodeId && item.targetInput === socket.key;\n              });\n              if (!_connection) {\n                _context4.next = 11;\n                break;\n              }\n              state = new PickedExisting(_connection, this.params, context);\n              _context4.next = 9;\n              return state.init(context);\n            case 9:\n              this.context.switchTo(state);\n              return _context4.abrupt(\"return\");\n            case 11:\n              _context4.next = 13;\n              return context.scope.emit({\n                type: 'connectionpick',\n                data: {\n                  socket: socket\n                }\n              });\n            case 13:\n              if (!_context4.sent) {\n                _context4.next = 17;\n                break;\n              }\n              this.context.switchTo(new Picked(socket, this.params));\n              _context4.next = 18;\n              break;\n            case 17:\n              this.drop(context);\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function pick(_x6, _x7) {\n        return _pick3.apply(this, arguments);\n      }\n      return pick;\n    }()\n  }, {\n    key: \"drop\",\n    value: function drop(context) {\n      var socket = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var created = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (this.initial) {\n        context.scope.emit({\n          type: 'connectiondrop',\n          data: {\n            initial: this.initial,\n            socket: socket,\n            created: created\n          }\n        });\n      }\n      delete this.initial;\n    }\n  }]);\n  return Idle;\n}(State);\n/**\n * Classic flow. User can pick/click a socket and connect it by releasing/clicking on another socket.\n * If connection already exists and user clicks on input socket, connection will be removed.\n */\nvar ClassicFlow = /*#__PURE__*/function () {\n  function ClassicFlow(params) {\n    _classCallCheck(this, ClassicFlow);\n    var canMakeConnection$1 = (params === null || params === void 0 ? void 0 : params.canMakeConnection) || canMakeConnection;\n    var makeConnection$1 = (params === null || params === void 0 ? void 0 : params.makeConnection) || makeConnection;\n    this.switchTo(new Idle({\n      canMakeConnection: canMakeConnection$1,\n      makeConnection: makeConnection$1\n    }));\n  }\n  _createClass(ClassicFlow, [{\n    key: \"pick\",\n    value: function () {\n      var _pick4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(params, context) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.currentState.pick(params, context);\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function pick(_x8, _x9) {\n        return _pick4.apply(this, arguments);\n      }\n      return pick;\n    }()\n  }, {\n    key: \"getPickedSocket\",\n    value: function getPickedSocket() {\n      return this.currentState.initial;\n    }\n  }, {\n    key: \"switchTo\",\n    value: function switchTo(state) {\n      state.setContext(this);\n      this.currentState = state;\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(context) {\n      this.currentState.drop(context);\n    }\n  }]);\n  return ClassicFlow;\n}();\n\n/**\n * Classic preset. Uses `ClassicFlow` for managing connections by user\n */\nfunction setup() {\n  return function () {\n    return new ClassicFlow();\n  };\n}\nvar classic = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  setup: setup\n});\n\n/**\n * Built-in presets\n * @module\n */\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  classic: classic\n});\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Connection plugin. Responsible for user interaction with connections (creation, deletion)\n * @priority 9\n * @emits connectionpick\n * @emits connectiondrop\n * @listens pointermove\n * @listens pointerup\n * @listens render\n * @listens unmount\n */\nvar ConnectionPlugin = /*#__PURE__*/function (_Scope) {\n  _inherits(ConnectionPlugin, _Scope);\n  var _super = _createSuper(ConnectionPlugin);\n  function ConnectionPlugin() {\n    var _this;\n    _classCallCheck(this, ConnectionPlugin);\n    _this = _super.call(this, 'connection');\n    _defineProperty(_assertThisInitialized(_this), \"presets\", []);\n    _defineProperty(_assertThisInitialized(_this), \"currentFlow\", null);\n    _defineProperty(_assertThisInitialized(_this), \"preudoconnection\", createPseudoconnection({\n      isPseudo: true\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"socketsCache\", new Map());\n    return _this;\n  }\n\n  /**\n   * Add preset to the plugin\n   * @param preset Preset to add\n   */\n  _createClass(ConnectionPlugin, [{\n    key: \"addPreset\",\n    value: function addPreset(preset) {\n      this.presets.push(preset);\n    }\n  }, {\n    key: \"findPreset\",\n    value: function findPreset(data) {\n      var _iterator = _createForOfIteratorHelper(this.presets),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var preset = _step.value;\n          var flow = preset(data);\n          if (flow) return flow;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (!this.currentFlow) return;\n      var socket = this.currentFlow.getPickedSocket();\n      if (socket) {\n        this.preudoconnection.render(this.areaPlugin, this.areaPlugin.area.pointer, socket);\n      }\n    }\n\n    /**\n     * Drop pseudo-connection if exists\n     * @emits connectiondrop\n     */\n  }, {\n    key: \"drop\",\n    value: function drop() {\n      var flowContext = {\n        editor: this.editor,\n        scope: this,\n        socketsCache: this.socketsCache\n      };\n      if (this.currentFlow) {\n        this.currentFlow.drop(flowContext);\n        this.preudoconnection.unmount(this.areaPlugin);\n        this.currentFlow = null;\n      }\n    }\n\n    // eslint-disable-next-line max-statements\n  }, {\n    key: \"pick\",\n    value: function () {\n      var _pick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, type) {\n        var flowContext, pointedElements, pickedSocket;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              flowContext = {\n                editor: this.editor,\n                scope: this,\n                socketsCache: this.socketsCache\n              };\n              pointedElements = elementsFromPoint(event.clientX, event.clientY);\n              pickedSocket = findSocket(this.socketsCache, pointedElements);\n              if (!pickedSocket) {\n                _context.next = 13;\n                break;\n              }\n              event.preventDefault();\n              event.stopPropagation();\n              this.currentFlow = this.currentFlow || this.findPreset(pickedSocket);\n              if (!this.currentFlow) {\n                _context.next = 11;\n                break;\n              }\n              _context.next = 10;\n              return this.currentFlow.pick({\n                socket: pickedSocket,\n                event: type\n              }, flowContext);\n            case 10:\n              this.preudoconnection.mount(this.areaPlugin);\n            case 11:\n              _context.next = 14;\n              break;\n            case 13:\n              if (this.currentFlow) {\n                this.currentFlow.drop(flowContext);\n              }\n            case 14:\n              if (this.currentFlow && !this.currentFlow.getPickedSocket()) {\n                this.preudoconnection.unmount(this.areaPlugin);\n                this.currentFlow = null;\n              }\n              this.update();\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function pick(_x, _x2) {\n        return _pick.apply(this, arguments);\n      }\n      return pick;\n    }()\n  }, {\n    key: \"setParent\",\n    value: function setParent(scope) {\n      var _this2 = this;\n      _get(_getPrototypeOf(ConnectionPlugin.prototype), \"setParent\", this).call(this, scope);\n      this.areaPlugin = this.parentScope(BaseAreaPlugin);\n      this.editor = this.areaPlugin.parentScope(NodeEditor);\n      var pointerdownSocket = function pointerdownSocket(e) {\n        _this2.pick(e, 'down');\n      };\n\n      // eslint-disable-next-line max-statements\n      this.addPipe(function (context) {\n        if (!context || _typeof(context) !== 'object' || !('type' in context)) return context;\n        if (context.type === 'pointermove') {\n          _this2.update();\n        } else if (context.type === 'pointerup') {\n          _this2.pick(context.data.event, 'up');\n        } else if (context.type === 'render') {\n          if (context.data.type === 'socket') {\n            var element = context.data.element;\n            element.addEventListener('pointerdown', pointerdownSocket);\n            _this2.socketsCache.set(element, context.data);\n          }\n        } else if (context.type === 'unmount') {\n          var _element = context.data.element;\n          _element.removeEventListener('pointerdown', pointerdownSocket);\n          _this2.socketsCache[\"delete\"](_element);\n        }\n        return context;\n      });\n    }\n  }]);\n  return ConnectionPlugin;\n}(Scope);\nexport { BidirectFlow, ClassicFlow, ConnectionPlugin, Flow, index as Presets, State, canMakeConnection, createPseudoconnection, getSourceTarget, makeConnection };","map":{"version":3,"names":["createPseudoconnection","extra","element","id","unmount","areaPlugin","removeConnectionView","mount","concat","getUID","isMounted","Boolean","render","_ref","data","x","y","isOutput","side","pointer","Error","payload","_objectSpread","source","nodeId","sourceOutput","key","target","targetInput","view","addConnectionView","emit","type","end","start","findSocket","socketsCache","elements","_iterator","_createForOfIteratorHelper$1","_step","s","n","done","value","found","get","err","e","f","elementsFromPoint","_elements$","root","arguments","length","undefined","document","shadowRoot","unshift","apply","_toConsumableArray","Flow","_createClass","_classCallCheck","State","setContext","context","getSourceTarget","initial","socket","forward","backward","_ref2","_slicedToArray","canMakeConnection","makeConnection","_ref3","_ref4","editor","addConnection","Picked$1","_State","_inherits","Picked","_super","_createSuper$2","params","_this","call","_pick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","drop","pickByClick","stop","pick","_x","_x2","created","scope","switchTo","Idle$1","_State2","Idle","_super2","_this2","_pick2","_callee2","event","_callee2$","_context2","sent","_x3","_x4","BidirectFlow","makeConnection$1","_pick3","_callee3","_callee3$","_context3","currentState","_x5","_x6","getPickedSocket","state","findPort","node","getNode","list","inputs","outputs","findConnections","getConnections","filter","connection","syncConnections","sockets","connections","map","port","multiple","multipleConnections","flat","commit","uniqueIds","Array","from","Set","forEach","removeConnection","_createSuper$1","PickedExisting","outputSocket","values","find","_init","_this3","then","response","init","_created","_State3","_super3","_this4","_callee4","_connection","_callee4$","_context4","abrupt","item","_x7","ClassicFlow","canMakeConnection$1","_pick4","_callee5","_callee5$","_context5","_x8","_x9","setup","ConnectionPlugin","_Scope","_createSuper","_defineProperty","_assertThisInitialized","isPseudo","Map","addPreset","preset","presets","push","findPreset","_createForOfIteratorHelper","flow","update","currentFlow","preudoconnection","area","flowContext","pointedElements","pickedSocket","clientX","clientY","preventDefault","stopPropagation","setParent","_get","_getPrototypeOf","prototype","parentScope","BaseAreaPlugin","NodeEditor","pointerdownSocket","addPipe","_typeof","addEventListener","set","_element","removeEventListener","Scope"],"sources":["/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-connection-plugin/src/pseudoconnection.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-connection-plugin/src/utils.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-connection-plugin/src/flow/base.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-connection-plugin/src/flow/utils.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-connection-plugin/src/flow/builtin/bidirect.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-connection-plugin/src/flow/builtin/classic/sync-connections.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-connection-plugin/src/flow/builtin/classic/index.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-connection-plugin/src/presets/classic.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-connection-plugin/src/presets/index.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-connection-plugin/src/index.ts"],"sourcesContent":["import { getUID } from 'rete'\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { ClassicScheme, Position, SocketData } from './types'\n\n/**\n * Create pseudoconnection. Used to trigger rendering of connection that is being created by user.\n * Has additional `isPseudo` property in payload.\n * @param extra Extra payload to add to connection\n */\nexport function createPseudoconnection<Schemes extends ClassicScheme, K>(extra?: Partial<Schemes['Connection']>) {\n  let element: HTMLElement | null = null\n  let id: string | null = null\n\n  function unmount(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>) {\n    if (id) {\n      areaPlugin.removeConnectionView(id)\n    }\n    element = null\n    id = null\n  }\n  function mount(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>) {\n    unmount(areaPlugin)\n    id = `pseudo_${getUID()}`\n  }\n\n  return {\n    isMounted() {\n      return Boolean(id)\n    },\n    mount,\n    // eslint-disable-next-line complexity\n    render(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>, { x, y }: Position, data: SocketData) {\n      const isOutput = data.side === 'output'\n      const pointer = { x: x + (isOutput ? -3 : 3), y } // fix hover of underlying elements\n\n      if (!id) throw new Error('pseudo connection id wasn\\'t generated')\n\n      const payload = isOutput ? {\n        id,\n        source: data.nodeId,\n        sourceOutput: data.key,\n        target: '',\n        targetInput: '',\n        ...(extra || {})\n      } : {\n        id,\n        target: data.nodeId,\n        targetInput: data.key,\n        source: '',\n        sourceOutput: '',\n        ...(extra || {})\n      }\n\n      if (!element) {\n        const view = areaPlugin.addConnectionView(payload)\n\n        element = view.element\n      }\n\n      if (!element) return\n\n      areaPlugin.emit({\n        type: 'render', data: {\n          element,\n          type: 'connection',\n          payload,\n          ...(isOutput ? { end: pointer } : { start: pointer })\n        }\n      })\n    },\n    unmount\n  }\n}\n","import { SocketData } from './types'\n/**\n * @param elements list of Element returned by document.elementsFromPoint\n */\nexport function findSocket(socketsCache: WeakMap<Element, SocketData>, elements: Element[]) {\n  for (const element of elements) {\n    const found = socketsCache.get(element)\n\n    if (found) {\n      return found\n    }\n  }\n}\n\n/**\n * Alternative to document.elementsFromPoint that traverses shadow roots\n * @param x x coordinate\n * @param y y coordinate\n * @param root root element to search in\n */\nexport function elementsFromPoint(x: number, y: number, root: ShadowRoot | Document = document) {\n  const elements = root.elementsFromPoint(x, y)\n  const shadowRoot = elements[0]?.shadowRoot\n\n  if (shadowRoot && shadowRoot !== root) {\n    elements.unshift(...elementsFromPoint(x, y, shadowRoot))\n  }\n\n  return elements\n}\n","import { BaseSchemes, NodeEditor, Scope } from 'rete'\n\nimport { Connection, SocketData } from '../types'\n\nexport type Context<Schemes extends BaseSchemes, K extends any[]> = {\n    editor: NodeEditor<Schemes>\n    scope: Scope<Connection, K>\n    socketsCache: Map<Element, SocketData>\n}\nexport type EventType = 'up' | 'down'\nexport type PickParams = { socket: SocketData, event: EventType }\n\nexport abstract class Flow<Schemes extends BaseSchemes, K extends any[]> {\n    public abstract pick(params: PickParams, context: Context<Schemes, K>): Promise<void>\n    public abstract getPickedSocket(): SocketData | undefined\n    public abstract drop(context: Context<Schemes, K>): void\n}\n","import { getUID } from 'rete'\n\nimport { ClassicScheme, SocketData } from '../types'\nimport { Context, PickParams } from './base'\n\nexport interface StateContext<Schemes extends ClassicScheme, K extends any[]> {\n  currentState: State<Schemes, K>\n  switchTo(state: State<Schemes, K>): void\n}\n\nexport abstract class State<Schemes extends ClassicScheme, K extends any[]> {\n  context!: StateContext<Schemes, K>\n  initial: SocketData | undefined\n\n  setContext(context: StateContext<Schemes, K>) {\n    this.context = context\n  }\n\n  abstract pick(params: PickParams, context: Context<Schemes, K>): Promise<void>\n  abstract drop(context: Context<Schemes, K>): void\n}\n\nexport function getSourceTarget(initial: SocketData, socket: SocketData) {\n  const forward = initial.side === 'output' && socket.side === 'input'\n  const backward = initial.side === 'input' && socket.side === 'output'\n  const [source, target] = forward\n    ? [initial, socket]\n    : (backward ? [socket, initial] : [])\n\n  if (source && target) return [source, target]\n}\n\nexport function canMakeConnection(initial: SocketData, socket: SocketData) {\n  return Boolean(getSourceTarget(initial, socket))\n}\n\nexport function makeConnection<Schemes extends ClassicScheme, K extends any[]>(initial: SocketData, socket: SocketData, context: Context<Schemes, K>) {\n  const [source, target] = getSourceTarget(initial, socket) || [null, null]\n\n  if (source && target) {\n    context.editor.addConnection({\n      id: getUID(),\n      source: source.nodeId,\n      sourceOutput: source.key,\n      target: target.nodeId,\n      targetInput: target.key\n    })\n    return true\n  }\n}\n","import { ClassicScheme, SocketData } from '../../types'\nimport { Context, Flow, PickParams } from '../base'\nimport { makeConnection as defaultMakeConnection, State, StateContext } from '../utils'\n\n/**\n * Bidirect flow params\n */\nexport type BidirectParams<Schemes extends ClassicScheme> = {\n  /** If true, user can pick a pseudo-connection by clicking on socket, not only by pointerdown */\n  pickByClick: boolean\n  /** Custom function to make connection */\n  makeConnection: <K extends any[]>(from: SocketData, to: SocketData, context: Context<Schemes, K>) => boolean | undefined\n}\n\nclass Picked<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(public initial: SocketData, private params: BidirectParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (this.params.makeConnection(this.initial, socket, context)) {\n      this.drop(context, socket, true)\n    } else if (!this.params.pickByClick) {\n      this.drop(context, socket)\n    }\n  }\n\n  drop(context: Context<ClassicScheme, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    this.context.switchTo(new Idle<Schemes, K>(this.params))\n  }\n}\n\nclass Idle<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(private params: BidirectParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (event === 'down') {\n      if (await context.scope.emit({ type: 'connectionpick', data: { socket } })) {\n        this.context.switchTo(new Picked(socket, this.params))\n      } else {\n        this.drop(context)\n      }\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    delete this.initial\n  }\n}\n\n/**\n * Bidirect flow. User can pick a socket and connect it by releasing mouse button.\n * More simple than classic flow, but less functional (can't remove connection by clicking on input socket).\n */\nexport class BidirectFlow<Schemes extends ClassicScheme, K extends any[]> implements StateContext<Schemes, K>, Flow<Schemes, K> {\n  currentState!: State<Schemes, K>\n\n  constructor(params?: Partial<BidirectParams<Schemes>>) {\n    const pickByClick = Boolean(params?.pickByClick)\n    const makeConnection = params?.makeConnection || defaultMakeConnection\n\n    this.switchTo(new Idle({ pickByClick, makeConnection }))\n  }\n\n  public async pick(params: PickParams, context: Context<Schemes, K>) {\n    await this.currentState.pick(params, context)\n  }\n\n  public getPickedSocket() {\n    return this.currentState.initial\n  }\n\n  public drop(context: Context<Schemes, K>) {\n    this.currentState.drop(context)\n  }\n\n  public switchTo(state: State<Schemes, K>): void {\n    state.setContext(this)\n    this.currentState = state\n  }\n}\n","import { NodeEditor } from 'rete'\n\nimport { ClassicScheme, SocketData } from '../../../types'\n\nfunction findPort<Schemes extends ClassicScheme>(socket: SocketData, editor: NodeEditor<Schemes>) {\n  const node = editor.getNode(socket.nodeId)\n\n  if (!node) throw new Error('cannot find node')\n\n  const list = socket.side === 'input' ? node.inputs : node.outputs\n\n  return list[socket.key]\n}\nfunction findConnections<Schemes extends ClassicScheme>(socket: SocketData, editor: NodeEditor<Schemes>) {\n  const { nodeId, side, key } = socket\n\n  return editor.getConnections().filter(connection => {\n    if (side === 'input') {\n      return connection.target === nodeId && connection.targetInput === key\n    }\n    if (side === 'output') {\n      return connection.source === nodeId && connection.sourceOutput === key\n    }\n  })\n}\n\n/**\n * Remove existing connections if Port doesnt allow multiple connections\n */\nexport function syncConnections<Schemes extends ClassicScheme>(sockets: SocketData[], editor: NodeEditor<Schemes>) {\n  const connections: Schemes['Connection'][] = sockets.map(socket => {\n    const port = findPort(socket, editor)\n    const multiple = port?.multipleConnections\n\n    if (multiple) return []\n\n    return findConnections(socket, editor)\n  }).flat()\n\n  return {\n    commit() {\n      const uniqueIds = Array.from(new Set(connections.map(({ id }) => id)))\n\n      uniqueIds.forEach(id => editor.removeConnection(id))\n    }\n  }\n}\n","\nimport { ClassicScheme, SocketData } from '../../../types'\nimport { Context, Flow, PickParams } from '../../base'\nimport {\n  canMakeConnection as defaultCanMakeConnection, makeConnection as defaultMakeConnection, State, StateContext\n} from '../../utils'\nimport { syncConnections } from './sync-connections'\n\n/**\n * Classic flow params\n */\nexport type ClassicParams<Schemes extends ClassicScheme> = {\n  /** Custom function to check if connection can be made */\n  canMakeConnection: (from: SocketData, to: SocketData) => boolean | undefined\n  /** Custom function to make connection */\n  makeConnection: <K extends any[]>(from: SocketData, to: SocketData, context: Context<Schemes, K>) => boolean | undefined\n}\n\nclass Picked<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(public initial: SocketData, private params: ClassicParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (this.params.canMakeConnection(this.initial, socket)) {\n      syncConnections([this.initial, socket], context.editor).commit()\n      const created = this.params.makeConnection(this.initial, socket, context)\n\n      this.drop(context, created ? socket : null, created)\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    this.context.switchTo(new Idle(this.params))\n  }\n}\n\nclass PickedExisting<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  initial!: SocketData\n  outputSocket: SocketData\n\n  constructor(public connection: Schemes['Connection'], private params: ClassicParams<Schemes>, context: Context<Schemes, K>) {\n    super()\n    const outputSocket = Array.from(context.socketsCache.values()).find(data => {\n      return data.nodeId === this.connection.source\n        && data.side === 'output'\n        && data.key === this.connection.sourceOutput\n    })\n\n    if (!outputSocket) throw new Error('cannot find output socket')\n\n    this.outputSocket = outputSocket\n  }\n\n  async init(context: Context<Schemes, K>) {\n    context.scope.emit({ type: 'connectionpick', data: { socket: this.outputSocket } }).then(response => {\n      if (response) {\n        context.editor.removeConnection(this.connection.id)\n        this.initial = this.outputSocket\n      } else {\n        this.drop(context)\n      }\n    })\n  }\n\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (this.initial && !(socket.side === 'input' && this.connection.target === socket.nodeId && this.connection.targetInput === socket.key)) {\n      if (this.params.canMakeConnection(this.initial, socket)) {\n        syncConnections([this.initial, socket], context.editor).commit()\n        const created = this.params.makeConnection(this.initial, socket, context)\n\n        this.drop(context, created ? socket : null, created)\n      }\n    } else if (event === 'down') {\n      if (this.initial) {\n        syncConnections([this.initial, socket], context.editor).commit()\n        const created = this.params.makeConnection(this.initial, socket, context)\n\n        this.drop(context, created ? socket : null, created)\n      }\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    this.context.switchTo(new Idle<Schemes, K>(this.params))\n  }\n}\n\nclass Idle<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(private params: ClassicParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (event !== 'down') return\n    if (socket.side === 'input') {\n      const connection = context\n        .editor.getConnections()\n        .find(item => item.target === socket.nodeId && item.targetInput === socket.key)\n\n      if (connection) {\n        const state = new PickedExisting(connection, this.params, context)\n\n        await state.init(context)\n        this.context.switchTo(state)\n        return\n      }\n    }\n\n    if (await context.scope.emit({ type: 'connectionpick', data: { socket } })) {\n      this.context.switchTo(new Picked(socket, this.params))\n    } else {\n      this.drop(context)\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    delete this.initial\n  }\n}\n\n/**\n * Classic flow. User can pick/click a socket and connect it by releasing/clicking on another socket.\n * If connection already exists and user clicks on input socket, connection will be removed.\n */\nexport class ClassicFlow<Schemes extends ClassicScheme, K extends any[]> implements StateContext<Schemes, K>, Flow<Schemes, K> {\n  currentState!: State<Schemes, K>\n\n  constructor(params?: Partial<ClassicParams<Schemes>>) {\n    const canMakeConnection = params?.canMakeConnection || defaultCanMakeConnection\n    const makeConnection = params?.makeConnection || defaultMakeConnection\n\n    this.switchTo(new Idle<Schemes, K>({ canMakeConnection, makeConnection }))\n  }\n\n  public async pick(params: PickParams, context: Context<Schemes, K>) {\n    await this.currentState.pick(params, context)\n  }\n\n  public getPickedSocket() {\n    return this.currentState.initial\n  }\n\n  public switchTo(state: State<Schemes, K>): void {\n    state.setContext(this)\n    this.currentState = state\n  }\n\n  public drop(context: Context<Schemes, K>) {\n    this.currentState.drop(context)\n  }\n}\n","import { ClassicFlow } from '../flow'\n\n/**\n * Classic preset. Uses `ClassicFlow` for managing connections by user\n */\nexport function setup() {\n  return () => new ClassicFlow()\n}\n","/**\n * Built-in presets\n * @module\n */\nexport * as classic from './classic'\n","import { NodeEditor, Scope } from 'rete'\nimport { BaseArea, BaseAreaPlugin, RenderSignal } from 'rete-area-plugin'\n\nimport { Flow } from './flow'\nimport { EventType } from './flow/base'\nimport { createPseudoconnection } from './pseudoconnection'\nimport { ClassicScheme, Connection, Position, Preset, Side, SocketData } from './types'\nimport { elementsFromPoint, findSocket } from './utils'\n\nexport * from './flow'\nexport * as Presets from './presets'\nexport { createPseudoconnection } from './pseudoconnection'\nexport type { Connection, ConnectionExtra, Preset, Side, SocketData } from './types'\n\ntype Requires =\n  | { type: 'pointermove', data: { position: Position, event: PointerEvent } }\n  | { type: 'pointerup', data: { position: Position, event: PointerEvent } }\n  | RenderSignal<'socket', {\n    nodeId: string,\n    side: Side,\n    key: string\n  }>\n  | { type: 'unmount', data: { element: HTMLElement } }\n\n/**\n * Connection plugin. Responsible for user interaction with connections (creation, deletion)\n * @priority 9\n * @emits connectionpick\n * @emits connectiondrop\n * @listens pointermove\n * @listens pointerup\n * @listens render\n * @listens unmount\n */\nexport class ConnectionPlugin<Schemes extends ClassicScheme, K = Requires> extends Scope<Connection, [Requires | K]> {\n  presets: Preset<Schemes>[] = []\n  private areaPlugin!: BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n  private editor!: NodeEditor<Schemes>\n  private currentFlow: Flow<Schemes, any[]> | null = null\n  private preudoconnection = createPseudoconnection({ isPseudo: true })\n  private socketsCache = new Map<Element, SocketData>()\n\n  constructor() {\n    super('connection')\n  }\n\n  /**\n   * Add preset to the plugin\n   * @param preset Preset to add\n   */\n  public addPreset(preset: Preset<Schemes>) {\n    this.presets.push(preset)\n  }\n\n  private findPreset(data: SocketData) {\n    for (const preset of this.presets) {\n      const flow = preset(data)\n\n      if (flow) return flow\n    }\n    return null\n  }\n\n  update() {\n    if (!this.currentFlow) return\n    const socket = this.currentFlow.getPickedSocket()\n\n    if (socket) {\n      this.preudoconnection.render(this.areaPlugin, this.areaPlugin.area.pointer, socket)\n    }\n  }\n\n  /**\n   * Drop pseudo-connection if exists\n   * @emits connectiondrop\n   */\n  drop() {\n    const flowContext = { editor: this.editor, scope: this, socketsCache: this.socketsCache }\n\n    if (this.currentFlow) {\n      this.currentFlow.drop(flowContext)\n      this.preudoconnection.unmount(this.areaPlugin)\n      this.currentFlow = null\n    }\n  }\n\n  // eslint-disable-next-line max-statements\n  async pick(event: PointerEvent, type: EventType) {\n    const flowContext = { editor: this.editor, scope: this, socketsCache: this.socketsCache }\n    const pointedElements = elementsFromPoint(event.clientX, event.clientY)\n    const pickedSocket = findSocket(this.socketsCache, pointedElements)\n\n    if (pickedSocket) {\n      event.preventDefault()\n      event.stopPropagation()\n      this.currentFlow = this.currentFlow || this.findPreset(pickedSocket)\n\n      if (this.currentFlow) {\n        await this.currentFlow.pick({ socket: pickedSocket, event: type }, flowContext)\n        this.preudoconnection.mount(this.areaPlugin)\n      }\n    } else if (this.currentFlow) {\n      this.currentFlow.drop(flowContext)\n    }\n    if (this.currentFlow && !this.currentFlow.getPickedSocket()) {\n      this.preudoconnection.unmount(this.areaPlugin)\n      this.currentFlow = null\n    }\n    this.update()\n  }\n\n  setParent(scope: Scope<Requires | K>): void {\n    super.setParent(scope)\n    this.areaPlugin = this.parentScope<BaseAreaPlugin<Schemes, BaseArea<Schemes>>>(BaseAreaPlugin)\n    this.editor = this.areaPlugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n\n    const pointerdownSocket = (e: PointerEvent) => {\n      this.pick(e, 'down')\n    }\n\n    // eslint-disable-next-line max-statements\n    this.addPipe(context => {\n      if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n      if (context.type === 'pointermove') {\n        this.update()\n      } else if (context.type === 'pointerup') {\n        this.pick(context.data.event, 'up')\n      } else if (context.type === 'render') {\n        if (context.data.type === 'socket') {\n          const { element } = context.data\n\n          element.addEventListener('pointerdown', pointerdownSocket)\n          this.socketsCache.set(element, context.data)\n        }\n      } else if (context.type === 'unmount') {\n        const { element } = context.data\n\n        element.removeEventListener('pointerdown', pointerdownSocket)\n        this.socketsCache.delete(element)\n      }\n      return context\n    })\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}