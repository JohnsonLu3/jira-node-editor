{"ast":null,"code":"/*!\n* rete-render-utils v2.0.0\n* (c) 2024 Vitaliy Stoliarov\n* Released under the MIT license.\n* */\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { BaseAreaPlugin } from 'rete-area-plugin';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\n\n/**\n * Get classic SVG path for a connection between two points.\n * @param points Array of two points\n * @param curvature Curvature of the connection\n */\nfunction classicConnectionPath(points, curvature) {\n  var _points = _slicedToArray(points, 2),\n    _points$ = _points[0],\n    x1 = _points$.x,\n    y1 = _points$.y,\n    _points$2 = _points[1],\n    x2 = _points$2.x,\n    y2 = _points$2.y;\n  var vertical = Math.abs(y1 - y2);\n  var hx1 = x1 + Math.max(vertical / 2, Math.abs(x2 - x1)) * curvature;\n  var hx2 = x2 - Math.max(vertical / 2, Math.abs(x2 - x1)) * curvature;\n  return \"M \".concat(x1, \" \").concat(y1, \" C \").concat(hx1, \" \").concat(y1, \" \").concat(hx2, \" \").concat(y2, \" \").concat(x2, \" \").concat(y2);\n}\n\n/**\n * Get loop SVG path for a connection between two points.\n * @param points Array of two points\n * @param curvature Curvature of the loop\n * @param size Size of the loop\n */\nfunction loopConnectionPath(points, curvature, size) {\n  var _points2 = _slicedToArray(points, 2),\n    _points2$ = _points2[0],\n    x1 = _points2$.x,\n    y1 = _points2$.y,\n    _points2$2 = _points2[1],\n    x2 = _points2$2.x,\n    y2 = _points2$2.y;\n  var k = y2 > y1 ? 1 : -1;\n  var scale = size + Math.abs(x1 - x2) / (size / 2);\n  var middleX = (x1 + x2) / 2;\n  var middleY = y1 - k * scale;\n  var vertical = (y2 - y1) * curvature;\n  return \"\\n        M \".concat(x1, \" \").concat(y1, \"\\n        C \").concat(x1 + scale, \" \").concat(y1, \"\\n        \").concat(x1 + scale, \" \").concat(middleY - vertical, \"\\n        \").concat(middleX, \" \").concat(middleY, \"\\n        C \").concat(x2 - scale, \" \").concat(middleY + vertical, \"\\n        \").concat(x2 - scale, \" \").concat(y2, \"\\n        \").concat(x2, \" \").concat(y2, \"\\n    \");\n}\n\n/* eslint-disable max-statements */\n\n/**\n* Calculates the center coordinates of a child element relative to a parent element.\n* @async\n* @param child The child element whose center coordinates need to be calculated.\n* @param parent The parent element relative to which the child element's center is calculated.\n* @returns Position of the child element's center\n* @throws Error if the child element has a null offsetParent.\n*/\nfunction getElementCenter(_x, _x2) {\n  return _getElementCenter.apply(this, arguments);\n}\nfunction _getElementCenter() {\n  _getElementCenter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(child, parent) {\n    var x, y, currentElement, width, height;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (child.offsetParent) {\n            _context.next = 5;\n            break;\n          }\n          _context.next = 3;\n          return new Promise(function (res) {\n            return setTimeout(res, 0);\n          });\n        case 3:\n          _context.next = 0;\n          break;\n        case 5:\n          x = child.offsetLeft;\n          y = child.offsetTop;\n          currentElement = child.offsetParent;\n          if (currentElement) {\n            _context.next = 10;\n            break;\n          }\n          throw new Error('child has null offsetParent');\n        case 10:\n          while (currentElement !== null && currentElement !== parent) {\n            x += currentElement.offsetLeft + currentElement.clientLeft;\n            y += currentElement.offsetTop + currentElement.clientTop;\n            currentElement = currentElement.offsetParent;\n          }\n          width = child.offsetWidth;\n          height = child.offsetHeight;\n          return _context.abrupt(\"return\", {\n            x: x + width / 2,\n            y: y + height / 2\n          });\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getElementCenter.apply(this, arguments);\n}\nvar EventEmitter = /*#__PURE__*/function () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n    _defineProperty(this, \"listeners\", new Set());\n  }\n  _createClass(EventEmitter, [{\n    key: \"emit\",\n    value: function emit(data) {\n      this.listeners.forEach(function (listener) {\n        return listener(data);\n      });\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(handler) {\n      var _this = this;\n      this.listeners.add(handler);\n      return function () {\n        _this.listeners[\"delete\"](handler);\n      };\n    }\n  }]);\n  return EventEmitter;\n}();\nvar SocketsPositionsStorage = /*#__PURE__*/function () {\n  function SocketsPositionsStorage() {\n    _classCallCheck(this, SocketsPositionsStorage);\n    _defineProperty(this, \"elements\", new Map());\n  }\n  _createClass(SocketsPositionsStorage, [{\n    key: \"getPosition\",\n    value: function getPosition(data) {\n      var _found$pop;\n      var list = Array.from(this.elements.values()).flat();\n      var found = list.filter(function (item) {\n        return item.side === data.side && item.nodeId === data.nodeId && item.key === data.key;\n      });\n\n      // eslint-disable-next-line no-console\n      if (found.length > 1) console.warn(['Found more than one element for socket with same key and side.', 'Probably it was not unmounted correctly'].join(' '), data);\n      return ((_found$pop = found.pop()) === null || _found$pop === void 0 ? void 0 : _found$pop.position) || null;\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      var existing = this.elements.get(data.element);\n      this.elements.set(data.element, existing ? [].concat(_toConsumableArray(existing.filter(function (n) {\n        return !(n.nodeId === data.nodeId && n.key === data.key && n.side === data.side);\n      })), [data]) : [data]);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(element) {\n      this.elements[\"delete\"](element);\n    }\n  }, {\n    key: \"snapshot\",\n    value: function snapshot() {\n      return Array.from(this.elements.values()).flat();\n    }\n  }]);\n  return SocketsPositionsStorage;\n}();\n\n/**\n * Abstract class for socket position calculation. It can be extended to implement custom socket position calculation.\n * @abstract\n * @listens render\n * @listens rendered\n * @listens unmount\n * @listens nodetranslated\n * @listens noderesized\n */\nvar BaseSocketPosition = /*#__PURE__*/function () {\n  function BaseSocketPosition() {\n    _classCallCheck(this, BaseSocketPosition);\n    _defineProperty(this, \"sockets\", new SocketsPositionsStorage());\n    _defineProperty(this, \"emitter\", new EventEmitter());\n    _defineProperty(this, \"area\", null);\n  }\n  _createClass(BaseSocketPosition, [{\n    key: \"attach\",\n    value:\n    /**\n     * Attach the watcher to the area's child scope.\n     * @param scope Scope of the watcher that should be a child of `BaseAreaPlugin`\n     */\n    function attach(scope) {\n      var _this = this;\n      if (this.area) return;\n      if (!scope.hasParent()) return;\n      this.area = scope.parentScope(BaseAreaPlugin);\n\n      // eslint-disable-next-line max-statements, complexity\n      this.area.addPipe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(context) {\n          var _context$data, _nodeId, _key, _side, _element, position, _nodeId2, _context$data$payload, source, target, _nodeId3;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(context.type === 'rendered' && context.data.type === 'socket')) {\n                  _context2.next = 8;\n                  break;\n                }\n                _context$data = context.data, _nodeId = _context$data.nodeId, _key = _context$data.key, _side = _context$data.side, _element = _context$data.element;\n                _context2.next = 4;\n                return _this.calculatePosition(_nodeId, _side, _key, _element);\n              case 4:\n                position = _context2.sent;\n                if (position) {\n                  _this.sockets.add({\n                    nodeId: _nodeId,\n                    key: _key,\n                    side: _side,\n                    element: _element,\n                    position: position\n                  });\n                  _this.emitter.emit({\n                    nodeId: _nodeId,\n                    key: _key,\n                    side: _side\n                  });\n                }\n                _context2.next = 24;\n                break;\n              case 8:\n                if (!(context.type === 'unmount')) {\n                  _context2.next = 12;\n                  break;\n                }\n                _this.sockets.remove(context.data.element);\n                _context2.next = 24;\n                break;\n              case 12:\n                if (!(context.type === 'nodetranslated')) {\n                  _context2.next = 16;\n                  break;\n                }\n                _this.emitter.emit({\n                  nodeId: context.data.id\n                });\n                _context2.next = 24;\n                break;\n              case 16:\n                if (!(context.type === 'noderesized')) {\n                  _context2.next = 23;\n                  break;\n                }\n                _nodeId2 = context.data.id;\n                _context2.next = 20;\n                return Promise.all(_this.sockets.snapshot().filter(function (item) {\n                  return item.nodeId === context.data.id && item.side === 'output';\n                }).map( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n                    var side, key, element, position;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) switch (_context.prev = _context.next) {\n                        case 0:\n                          side = item.side, key = item.key, element = item.element;\n                          _context.next = 3;\n                          return _this.calculatePosition(_nodeId2, side, key, element);\n                        case 3:\n                          position = _context.sent;\n                          if (position) {\n                            item.position = position;\n                          }\n                        case 5:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }, _callee);\n                  }));\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }()));\n              case 20:\n                _this.emitter.emit({\n                  nodeId: _nodeId2\n                });\n                _context2.next = 24;\n                break;\n              case 23:\n                if (context.type === 'render' && context.data.type === 'connection') {\n                  _context$data$payload = context.data.payload, source = _context$data$payload.source, target = _context$data$payload.target;\n                  _nodeId3 = source || target;\n                  _this.emitter.emit({\n                    nodeId: _nodeId3\n                  });\n                }\n              case 24:\n                return _context2.abrupt(\"return\", context);\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n\n    /**\n     * Listen to socket position changes. Usually used by rendering plugins to update the start/end of the connection.\n     * @internal\n     * @param nodeId Node ID\n     * @param side Side of the socket, 'input' or 'output'\n     * @param key Socket key\n     * @param change Callback function that is called when the socket position changes\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(nodeId, side, key, change) {\n      var _this2 = this;\n      var unlisten = this.emitter.listen(function (data) {\n        if (data.nodeId !== nodeId) return;\n        if ((!data.key || data.side === side) && (!data.side || data.key === key)) {\n          var _this2$area;\n          var position = _this2.sockets.getPosition({\n            side: side,\n            nodeId: nodeId,\n            key: key\n          });\n          if (!position) return;\n          var x = position.x,\n            y = position.y;\n          var nodeView = (_this2$area = _this2.area) === null || _this2$area === void 0 ? void 0 : _this2$area.nodeViews.get(nodeId);\n          if (nodeView) change({\n            x: x + nodeView.position.x,\n            y: y + nodeView.position.y\n          });\n        }\n      });\n      this.sockets.snapshot().forEach(function (data) {\n        if (data.nodeId === nodeId) _this2.emitter.emit(data);\n      });\n      return unlisten;\n    }\n  }]);\n  return BaseSocketPosition;\n}();\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Props for `DOMSocketPosition` class.\n */\n\n/**\n * Class for socket position calculation based on DOM elements. It uses `getElementCenter` function to calculate the position.\n */\nvar DOMSocketPosition = /*#__PURE__*/function (_BaseSocketPosition) {\n  _inherits(DOMSocketPosition, _BaseSocketPosition);\n  var _super = _createSuper(DOMSocketPosition);\n  function DOMSocketPosition(props) {\n    var _this;\n    _classCallCheck(this, DOMSocketPosition);\n    _this = _super.call(this);\n    _this.props = props;\n    return _this;\n  }\n  _createClass(DOMSocketPosition, [{\n    key: \"calculatePosition\",\n    value: function () {\n      var _calculatePosition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(nodeId, side, key, element) {\n        var _this$area, _this$props, _this$props2;\n        var view, position;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              view = (_this$area = this.area) === null || _this$area === void 0 ? void 0 : _this$area.nodeViews.get(nodeId);\n              if (view !== null && view !== void 0 && view.element) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", null);\n            case 3:\n              _context.next = 5;\n              return getElementCenter(element, view.element);\n            case 5:\n              position = _context.sent;\n              if (!((_this$props = this.props) !== null && _this$props !== void 0 && _this$props.offset)) {\n                _context.next = 8;\n                break;\n              }\n              return _context.abrupt(\"return\", (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.offset(position, nodeId, side, key));\n            case 8:\n              return _context.abrupt(\"return\", {\n                x: position.x + 12 * (side === 'input' ? -1 : 1),\n                y: position.y\n              });\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function calculatePosition(_x, _x2, _x3, _x4) {\n        return _calculatePosition.apply(this, arguments);\n      }\n      return calculatePosition;\n    }()\n  }]);\n  return DOMSocketPosition;\n}(BaseSocketPosition);\n\n/**\n * Wrapper function for `DOMSocketPosition` class.\n * @param props Props for `DOMSocketPosition` class\n */\nfunction getDOMSocketPosition(props) {\n  return new DOMSocketPosition(props);\n}\nexport { BaseSocketPosition, DOMSocketPosition, classicConnectionPath, getDOMSocketPosition, getElementCenter, loopConnectionPath };","map":{"version":3,"names":["classicConnectionPath","points","curvature","_points","_slicedToArray","_points$","x1","x","y1","y","_points$2","x2","y2","vertical","Math","abs","hx1","max","hx2","concat","loopConnectionPath","size","_points2","_points2$","_points2$2","k","scale","middleX","middleY","getElementCenter","_x","_x2","_getElementCenter","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","child","parent","currentElement","width","height","wrap","_callee$","_context","prev","next","offsetParent","Promise","res","setTimeout","offsetLeft","offsetTop","Error","clientLeft","clientTop","offsetWidth","offsetHeight","abrupt","stop","EventEmitter","_classCallCheck","_defineProperty","Set","_createClass","key","value","emit","data","listeners","forEach","listener","listen","handler","_this","add","SocketsPositionsStorage","Map","getPosition","_found$pop","list","Array","from","elements","values","flat","found","filter","item","side","nodeId","length","console","warn","join","pop","position","existing","get","element","set","_toConsumableArray","n","remove","snapshot","BaseSocketPosition","attach","scope","area","hasParent","parentScope","BaseAreaPlugin","addPipe","_ref","_callee2","context","_context$data","_nodeId","_key","_side","_element","_nodeId2","_context$data$payload","source","target","_nodeId3","_callee2$","_context2","type","calculatePosition","sent","sockets","emitter","id","all","map","_ref2","payload","change","_this2","unlisten","_this2$area","nodeView","nodeViews","DOMSocketPosition","_BaseSocketPosition","_inherits","_super","_createSuper","props","call","_calculatePosition","_this$area","_this$props","_this$props2","view","offset","_x3","_x4","getDOMSocketPosition"],"sources":["/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-render-utils/src/connection.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-render-utils/src/utils.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-render-utils/src/sockets-position/storage.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-render-utils/src/sockets-position/base-socket-position.ts","/Users/jolu/Documents/code/jira-node-editor/node_modules/rete-render-utils/src/sockets-position/dom-socket-position.ts"],"sourcesContent":["import { Position } from './types'\n\n/**\n * Get classic SVG path for a connection between two points.\n * @param points Array of two points\n * @param curvature Curvature of the connection\n */\nexport function classicConnectionPath(points: [Position, Position], curvature: number) {\n  const [{ x: x1, y: y1 }, { x: x2, y: y2 }] = points\n  const vertical = Math.abs(y1 - y2)\n  const hx1 = x1 + Math.max(vertical / 2, Math.abs(x2 - x1)) * curvature\n  const hx2 = x2 - Math.max(vertical / 2, Math.abs(x2 - x1)) * curvature\n\n  return `M ${x1} ${y1} C ${hx1} ${y1} ${hx2} ${y2} ${x2} ${y2}`\n}\n\n/**\n * Get loop SVG path for a connection between two points.\n * @param points Array of two points\n * @param curvature Curvature of the loop\n * @param size Size of the loop\n */\nexport function loopConnectionPath(points: [Position, Position], curvature: number, size: number) {\n  const [{ x: x1, y: y1 }, { x: x2, y: y2 }] = points\n  const k = y2 > y1 ? 1 : -1\n  const scale = size + Math.abs(x1 - x2) / (size / 2)\n  const middleX = (x1 + x2) / 2\n  const middleY = y1 - k * scale\n  const vertical = (y2 - y1) * curvature\n\n  return `\n        M ${x1} ${y1}\n        C ${x1 + scale} ${y1}\n        ${x1 + scale} ${middleY - vertical}\n        ${middleX} ${middleY}\n        C ${x2 - scale} ${middleY + vertical}\n        ${x2 - scale} ${y2}\n        ${x2} ${y2}\n    `\n}\n","/* eslint-disable max-statements */\n\n/**\n* Calculates the center coordinates of a child element relative to a parent element.\n* @async\n* @param child The child element whose center coordinates need to be calculated.\n* @param parent The parent element relative to which the child element's center is calculated.\n* @returns Position of the child element's center\n* @throws Error if the child element has a null offsetParent.\n*/\nexport async function getElementCenter(child: HTMLElement, parent: HTMLElement) {\n  while (!child.offsetParent) {\n    await new Promise((res) => setTimeout(res, 0))\n  }\n\n  let x = child.offsetLeft\n  let y = child.offsetTop\n  let currentElement = child.offsetParent as HTMLElement | null\n\n  if (!currentElement) throw new Error('child has null offsetParent')\n\n  while (currentElement !== null && currentElement !== parent) {\n    x += currentElement.offsetLeft + currentElement.clientLeft\n    y += currentElement.offsetTop + currentElement.clientTop\n    currentElement = currentElement.offsetParent as HTMLElement | null\n  }\n  const width = child.offsetWidth\n  const height = child.offsetHeight\n\n  return {\n    x: (x + width / 2),\n    y: (y + height / 2)\n  }\n}\nexport class EventEmitter<T> {\n  listeners = new Set<(data: T) => void>()\n\n  emit(data: T) {\n    this.listeners.forEach(listener => listener(data))\n  }\n\n  listen(handler: (data: T) => void) {\n    this.listeners.add(handler)\n\n    return () => {\n      this.listeners.delete(handler)\n    }\n  }\n}\n","import { Position, Side } from '../types'\n\ntype SocketPayload = {\n  element: HTMLElement\n  side: Side\n  key: string\n  nodeId: string\n  position: Position // relative to node\n}\n\nexport class SocketsPositionsStorage {\n  elements = new Map<HTMLElement, SocketPayload[]>()\n\n  getPosition(data: { nodeId: string, key: string, side: Side }) {\n    const list = Array.from(this.elements.values()).flat()\n    const found = list.filter(item => {\n      return item.side === data.side && item.nodeId === data.nodeId && item.key === data.key\n    })\n\n    // eslint-disable-next-line no-console\n    if (found.length > 1) console.warn([\n      'Found more than one element for socket with same key and side.',\n      'Probably it was not unmounted correctly'\n    ].join(' '), data)\n\n    return found.pop()?.position || null\n  }\n\n  add(data: SocketPayload) {\n    const existing = this.elements.get(data.element)\n\n    this.elements.set(data.element, existing ? [\n      ...existing.filter(n => !(n.nodeId === data.nodeId && n.key === data.key && n.side === data.side)), data\n    ] : [data])\n  }\n\n  remove(element: SocketPayload['element']) {\n    this.elements.delete(element)\n  }\n\n  snapshot() {\n    return Array.from(this.elements.values()).flat()\n  }\n}\n","import { BaseSchemes, NodeId, Scope } from 'rete'\nimport { BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { ExpectArea2DExtra, Position, Side } from '../types'\nimport { EventEmitter } from '../utils'\nimport { SocketsPositionsStorage } from './storage'\nimport { OnChange, SocketPositionWatcher } from './types'\n\ntype ListenerData = {\n  nodeId: string\n  side?: Side\n  key?: string\n}\n\n/**\n * Abstract class for socket position calculation. It can be extended to implement custom socket position calculation.\n * @abstract\n * @listens render\n * @listens rendered\n * @listens unmount\n * @listens nodetranslated\n * @listens noderesized\n */\nexport abstract class BaseSocketPosition<Schemes extends BaseSchemes, K> implements SocketPositionWatcher<Scope<never, [K]>> {\n  sockets = new SocketsPositionsStorage()\n  emitter = new EventEmitter<ListenerData>()\n  area: BaseAreaPlugin<Schemes, ExpectArea2DExtra<Schemes>> | null = null\n\n  /**\n   * The method needs to be implemented that calculates the position of the socket.\n   * @param nodeId Node ID\n   * @param side Side of the socket, 'input' or 'output'\n   * @param key Socket key\n   * @param element Socket element\n   */\n  abstract calculatePosition(nodeId: string, side: Side, key: string, element: HTMLElement): Promise<Position | null>\n\n  /**\n   * Attach the watcher to the area's child scope.\n   * @param scope Scope of the watcher that should be a child of `BaseAreaPlugin`\n   */\n  attach(scope: Scope<never, [K]>) {\n    if (this.area) return\n    if (!scope.hasParent()) return\n    this.area = scope.parentScope<BaseAreaPlugin<Schemes, ExpectArea2DExtra<Schemes>>>(BaseAreaPlugin)\n\n    // eslint-disable-next-line max-statements, complexity\n    this.area.addPipe(async context => {\n      if (context.type === 'rendered' && context.data.type === 'socket') {\n        const { nodeId, key, side, element } = context.data\n\n        const position = await this.calculatePosition(nodeId, side, key, element)\n\n        if (position) {\n          this.sockets.add({ nodeId, key, side, element, position })\n          this.emitter.emit({ nodeId, key, side })\n        }\n      } else if (context.type === 'unmount') {\n        this.sockets.remove(context.data.element)\n      } else if (context.type === 'nodetranslated') {\n        this.emitter.emit({ nodeId: context.data.id })\n      } else if (context.type === 'noderesized') {\n        const { id: nodeId } = context.data\n\n        await Promise.all(this.sockets.snapshot()\n          .filter(item => item.nodeId === context.data.id && item.side === 'output')\n          .map(async item => {\n            const { side, key, element } = item\n            const position = await this.calculatePosition(nodeId, side, key, element)\n\n            if (position) {\n              item.position = position\n            }\n          }))\n        this.emitter.emit({ nodeId })\n      } else if (context.type === 'render' && context.data.type === 'connection') {\n        const { source, target } = context.data.payload\n        const nodeId = source || target\n\n        this.emitter.emit({ nodeId })\n      }\n      return context\n    })\n  }\n\n  /**\n   * Listen to socket position changes. Usually used by rendering plugins to update the start/end of the connection.\n   * @internal\n   * @param nodeId Node ID\n   * @param side Side of the socket, 'input' or 'output'\n   * @param key Socket key\n   * @param change Callback function that is called when the socket position changes\n   */\n  listen(nodeId: NodeId, side: Side, key: string, change: OnChange) {\n    const unlisten = this.emitter.listen((data: ListenerData) => {\n      if (data.nodeId !== nodeId) return\n      if ((!data.key || data.side === side) && (!data.side || data.key === key)) {\n        const position = this.sockets.getPosition({ side, nodeId, key })\n\n        if (!position) return\n\n        const { x, y } = position\n        const nodeView = this.area?.nodeViews.get(nodeId)\n\n        if (nodeView) change({\n          x: x + nodeView.position.x,\n          y: y + nodeView.position.y\n        })\n      }\n    })\n\n    this.sockets.snapshot().forEach(data => {\n      if (data.nodeId === nodeId) this.emitter.emit(data)\n    })\n    return unlisten\n  }\n}\n","import { BaseSchemes } from 'rete'\n\nimport { Position, Side } from '../types'\nimport { getElementCenter } from '../utils'\nimport { BaseSocketPosition } from './base-socket-position'\n\n/**\n * Props for `DOMSocketPosition` class.\n */\nexport type Props = {\n  /**\n   * Allows to customize the position of the socket. By default, the position is shifted by 12px on the x-axis relative to the center of the socket.\n   * @param position Center position of the socket\n   * @param nodeId Node ID\n   * @param side Side of the socket, 'input' or 'output'\n   * @param key Socket key\n   * @returns Custom position of the socket\n   */\n  offset?: (position: Position, nodeId: string, side: Side, key: string) => Position\n}\n\n/**\n * Class for socket position calculation based on DOM elements. It uses `getElementCenter` function to calculate the position.\n */\nexport class DOMSocketPosition<Schemes extends BaseSchemes, K> extends BaseSocketPosition<Schemes, K> {\n  constructor(private props?: Props) {\n    super()\n  }\n\n  async calculatePosition(nodeId: string, side: Side, key: string, element: HTMLElement) {\n    const view = this.area?.nodeViews.get(nodeId)\n\n    if (!view?.element) return null\n    const position = await getElementCenter(element, view.element)\n\n    if (this.props?.offset) return this.props?.offset(position, nodeId, side, key)\n\n    return {\n      x: position.x + 12 * (side === 'input' ? -1 : 1),\n      y: position.y\n    }\n  }\n}\n\n/**\n * Wrapper function for `DOMSocketPosition` class.\n * @param props Props for `DOMSocketPosition` class\n */\nexport function getDOMSocketPosition<Schemes extends BaseSchemes, K>(props?: Props) {\n  return new DOMSocketPosition<Schemes, K>(props)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}